//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.08.25 at 01:29:02 EDT 
//


package edu.uconn.psy.jtrace.parser.impl;

public class JtPrimitiveTypeImpl implements edu.uconn.psy.jtrace.parser.JtPrimitiveType, com.sun.xml.bind.JAXBObject, edu.uconn.psy.jtrace.parser.impl.runtime.UnmarshallableObject, edu.uconn.psy.jtrace.parser.impl.runtime.XMLSerializable, edu.uconn.psy.jtrace.parser.impl.runtime.ValidatableObject
{

    protected edu.uconn.psy.jtrace.parser.JtQueryType _Query;
    protected edu.uconn.psy.jtrace.parser.JtParametersType _Parameters;
    protected edu.uconn.psy.jtrace.parser.JtListOfPrimitivesType _List;
    protected edu.uconn.psy.jtrace.parser.JtPredicateType _Predicate;
    protected edu.uconn.psy.jtrace.parser.JtLexiconType _Lexicon;
    protected java.lang.String _Text;
    protected java.math.BigDecimal _Decimal;
    protected edu.uconn.psy.jtrace.parser.JtFileNameType _File;
    protected boolean has_Int;
    protected int _Int;
    public final static java.lang.Class version = (edu.uconn.psy.jtrace.parser.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (edu.uconn.psy.jtrace.parser.JtPrimitiveType.class);
    }

    public edu.uconn.psy.jtrace.parser.JtQueryType getQuery() {
        return _Query;
    }

    public void setQuery(edu.uconn.psy.jtrace.parser.JtQueryType value) {
        _Query = value;
    }

    public edu.uconn.psy.jtrace.parser.JtParametersType getParameters() {
        return _Parameters;
    }

    public void setParameters(edu.uconn.psy.jtrace.parser.JtParametersType value) {
        _Parameters = value;
    }

    public edu.uconn.psy.jtrace.parser.JtListOfPrimitivesType getList() {
        return _List;
    }

    public void setList(edu.uconn.psy.jtrace.parser.JtListOfPrimitivesType value) {
        _List = value;
    }

    public edu.uconn.psy.jtrace.parser.JtPredicateType getPredicate() {
        return _Predicate;
    }

    public void setPredicate(edu.uconn.psy.jtrace.parser.JtPredicateType value) {
        _Predicate = value;
    }

    public edu.uconn.psy.jtrace.parser.JtLexiconType getLexicon() {
        return _Lexicon;
    }

    public void setLexicon(edu.uconn.psy.jtrace.parser.JtLexiconType value) {
        _Lexicon = value;
    }

    public java.lang.String getText() {
        return _Text;
    }

    public void setText(java.lang.String value) {
        _Text = value;
    }

    public java.math.BigDecimal getDecimal() {
        return _Decimal;
    }

    public void setDecimal(java.math.BigDecimal value) {
        _Decimal = value;
    }

    public edu.uconn.psy.jtrace.parser.JtFileNameType getFile() {
        return _File;
    }

    public void setFile(edu.uconn.psy.jtrace.parser.JtFileNameType value) {
        _File = value;
    }

    public int getInt() {
        return _Int;
    }

    public void setInt(int value) {
        _Int = value;
        has_Int = true;
    }

    public edu.uconn.psy.jtrace.parser.impl.runtime.UnmarshallingEventHandler createUnmarshaller(edu.uconn.psy.jtrace.parser.impl.runtime.UnmarshallingContext context) {
        return new edu.uconn.psy.jtrace.parser.impl.JtPrimitiveTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(edu.uconn.psy.jtrace.parser.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (((((((((_Predicate == null)&&(_Decimal == null))&&(_Text!= null))&&(_Lexicon == null))&&(_Query == null))&&(!has_Int))&&(_File == null))&&(_Parameters == null))&&(_List == null)) {
            context.startElement("http://xml.netbeans.org/examples/targetNS", "text");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Text), "Text");
            } catch (java.lang.Exception e) {
                edu.uconn.psy.jtrace.parser.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        } else {
            if (((((((((_Predicate == null)&&(_Decimal == null))&&(_Text == null))&&(_Lexicon == null))&&(_Query == null))&&has_Int)&&(_File == null))&&(_Parameters == null))&&(_List == null)) {
                context.startElement("http://xml.netbeans.org/examples/targetNS", "int");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _Int)), "Int");
                } catch (java.lang.Exception e) {
                    edu.uconn.psy.jtrace.parser.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            } else {
                if (((((((((_Predicate == null)&&(_Decimal!= null))&&(_Text == null))&&(_Lexicon == null))&&(_Query == null))&&(!has_Int))&&(_File == null))&&(_Parameters == null))&&(_List == null)) {
                    context.startElement("http://xml.netbeans.org/examples/targetNS", "decimal");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _Decimal)), "Decimal");
                    } catch (java.lang.Exception e) {
                        edu.uconn.psy.jtrace.parser.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                } else {
                    if (((((((((_Predicate == null)&&(_Decimal == null))&&(_Text == null))&&(_Lexicon == null))&&(_Query == null))&&(!has_Int))&&(_File!= null))&&(_Parameters == null))&&(_List == null)) {
                        context.startElement("http://xml.netbeans.org/examples/targetNS", "file");
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _File), "File");
                        context.endNamespaceDecls();
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _File), "File");
                        context.endAttributes();
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _File), "File");
                        context.endElement();
                    } else {
                        if (((((((((_Predicate == null)&&(_Decimal == null))&&(_Text == null))&&(_Lexicon == null))&&(_Query == null))&&(!has_Int))&&(_File == null))&&(_Parameters!= null))&&(_List == null)) {
                            context.startElement("http://xml.netbeans.org/examples/targetNS", "parameters");
                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Parameters), "Parameters");
                            context.endNamespaceDecls();
                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Parameters), "Parameters");
                            context.endAttributes();
                            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Parameters), "Parameters");
                            context.endElement();
                        } else {
                            if (((((((((_Predicate == null)&&(_Decimal == null))&&(_Text == null))&&(_Lexicon!= null))&&(_Query == null))&&(!has_Int))&&(_File == null))&&(_Parameters == null))&&(_List == null)) {
                                context.startElement("http://xml.netbeans.org/examples/targetNS", "lexicon");
                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Lexicon), "Lexicon");
                                context.endNamespaceDecls();
                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Lexicon), "Lexicon");
                                context.endAttributes();
                                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Lexicon), "Lexicon");
                                context.endElement();
                            } else {
                                if (((((((((_Predicate!= null)&&(_Decimal == null))&&(_Text == null))&&(_Lexicon == null))&&(_Query == null))&&(!has_Int))&&(_File == null))&&(_Parameters == null))&&(_List == null)) {
                                    context.startElement("http://xml.netbeans.org/examples/targetNS", "predicate");
                                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Predicate), "Predicate");
                                    context.endNamespaceDecls();
                                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Predicate), "Predicate");
                                    context.endAttributes();
                                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _Predicate), "Predicate");
                                    context.endElement();
                                } else {
                                    if (((((((((_Predicate == null)&&(_Decimal == null))&&(_Text == null))&&(_Lexicon == null))&&(_Query!= null))&&(!has_Int))&&(_File == null))&&(_Parameters == null))&&(_List == null)) {
                                        context.startElement("http://xml.netbeans.org/examples/targetNS", "query");
                                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Query), "Query");
                                        context.endNamespaceDecls();
                                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Query), "Query");
                                        context.endAttributes();
                                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Query), "Query");
                                        context.endElement();
                                    } else {
                                        if (((((((((_Predicate == null)&&(_Decimal == null))&&(_Text == null))&&(_Lexicon == null))&&(_Query == null))&&(!has_Int))&&(_File == null))&&(_Parameters == null))&&(_List!= null)) {
                                            context.startElement("http://xml.netbeans.org/examples/targetNS", "list");
                                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _List), "List");
                                            context.endNamespaceDecls();
                                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _List), "List");
                                            context.endAttributes();
                                            context.childAsBody(((com.sun.xml.bind.JAXBObject) _List), "List");
                                            context.endElement();
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    public void serializeAttributes(edu.uconn.psy.jtrace.parser.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(edu.uconn.psy.jtrace.parser.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (edu.uconn.psy.jtrace.parser.JtPrimitiveType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bex"
+"pandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq"
+"\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001eco"
+"m.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAt"
+"tributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sr\u0000\u001fcom.sun.msv.grammar"
+".SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\u001bcom.sun.msv.grammar.DataE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006excep"
+"tq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000#com"
+".sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidx"
+"r\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%"
+"com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun."
+"msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012"
+"Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001bL\u0000\nwhiteSpacet\u0000.Lcom/sun/m"
+"sv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2"
+"001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpac"
+"eProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.W"
+"hiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expr"
+"ession$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.u"
+"til.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001bL\u0000\fnamespaceURIq\u0000~"
+"\u0000\u001bxpq\u0000~\u0000\u001fq\u0000~\u0000\u001esq\u0000~\u0000\u0000ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000exq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boo"
+"lean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0013ppsr\u0000\"com.sun.msv.datatype."
+"xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0018q\u0000~\u0000\u001et\u0000\u0005QNamesr\u00005com.sun.msv.d"
+"atatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000!q\u0000~"
+"\u0000$sq\u0000~\u0000%q\u0000~\u0000/q\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001bL\u0000\fnamespaceURIq\u0000~\u0000\u001bxr\u0000\u001dcom.sun.msv"
+".grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2"
+"001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expression$Eps"
+"ilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000*\u0001psq\u0000~\u00003t\u0000\u0004textt\u0000)http:"
+"//xml.netbeans.org/examples/targetNSsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0013p"
+"psr\u0000 com.sun.msv.datatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun."
+"msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst"
+"\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xq\u0000~\u0000\u0018q\u0000~\u0000\u001et\u0000\u0003int"
+"q\u0000~\u00001sr\u0000*com.sun.msv.datatype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimit"
+"Valuet\u0000\u0012Ljava/lang/Object;xr\u00009com.sun.msv.datatype.xsd.DataT"
+"ypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.dataty"
+"pe.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needVal"
+"ueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000CL\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/da"
+"tatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001bxq\u0000~\u0000\u001appq\u0000~\u00001\u0000\u0001sr\u0000*"
+"com.sun.msv.datatype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Gp"
+"pq\u0000~\u00001\u0000\u0000sr\u0000!com.sun.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000Bq\u0000~\u0000\u001et\u0000\u0004longq\u0000~\u00001sq\u0000~\u0000Fppq\u0000~\u00001\u0000\u0001sq\u0000~\u0000Mppq\u0000~\u00001\u0000\u0000sr\u0000$com.sun"
+".msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Bq\u0000~\u0000\u001et\u0000\u0007intege"
+"rq\u0000~\u00001sr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexica"
+"lConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000Jppq\u0000~\u00001\u0001\u0000sr\u0000#com.sun.msv.da"
+"tatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0018q\u0000~\u0000\u001et\u0000\u0007decimalq\u0000~\u00001q\u0000"
+"~\u0000[t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000Ut\u0000\fminInclusivesr\u0000\u000ejava.lang.Lo"
+"ng;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000q\u0000~\u0000Ut\u0000\fmaxInclusivesq\u0000~\u0000_\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000Pq\u0000~\u0000^sr\u0000\u0011java.lang."
+"Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005valuexq\u0000~\u0000`\u0080\u0000\u0000\u0000q\u0000~\u0000Pq\u0000~\u0000bsq\u0000~\u0000d\u007f\u00ff\u00ff\u00ffq\u0000~\u0000"
+"$sq\u0000~\u0000%q\u0000~\u0000Eq\u0000~\u0000\u001esq\u0000~\u0000\u0000ppsq\u0000~\u0000(q\u0000~\u0000+pq\u0000~\u0000,q\u0000~\u00005q\u0000~\u00009sq\u0000~\u00003t\u0000"
+"\u0003intq\u0000~\u0000=sq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0013q\u0000~\u0000+pq\u0000~\u0000[q\u0000~\u0000$sq\u0000~\u0000%q\u0000~\u0000\\q"
+"\u0000~\u0000\u001esq\u0000~\u0000\u0000ppsq\u0000~\u0000(q\u0000~\u0000+pq\u0000~\u0000,q\u0000~\u00005q\u0000~\u00009sq\u0000~\u00003t\u0000\u0007decimalq\u0000~\u0000="
+"sq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0011ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0000ppsr\u0000 com.sun.msv.grammar.On"
+"eOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000+psq\u0000~\u0000(q\u0000~\u0000+psr\u00002com.sun.msv.gramm"
+"ar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000:psr\u0000 "
+"com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00004q\u0000~\u00009sq\u0000~\u00003"
+"t\u0000*edu.uconn.psy.jtrace.parser.JtFileNameTypet\u0000+http://java."
+"sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0000ppsq\u0000~\u0000(q\u0000~\u0000+pq\u0000~\u0000,q\u0000~\u0000"
+"5q\u0000~\u00009sq\u0000~\u00003t\u0000\u0004fileq\u0000~\u0000=sq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0011ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0000ppsq"
+"\u0000~\u0000xq\u0000~\u0000+psq\u0000~\u0000(q\u0000~\u0000+pq\u0000~\u0000}q\u0000~\u0000\u007fq\u0000~\u00009sq\u0000~\u00003t\u0000,edu.uconn.psy."
+"jtrace.parser.JtParametersTypeq\u0000~\u0000\u0082sq\u0000~\u0000\u0000ppsq\u0000~\u0000(q\u0000~\u0000+pq\u0000~\u0000,"
+"q\u0000~\u00005q\u0000~\u00009sq\u0000~\u00003t\u0000\nparametersq\u0000~\u0000=sq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0011ppsq\u0000~\u0000\rpp\u0000"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000xq\u0000~\u0000+psq\u0000~\u0000(q\u0000~\u0000+pq\u0000~\u0000}q\u0000~\u0000\u007fq\u0000~\u00009sq\u0000~\u00003t\u0000)edu."
+"uconn.psy.jtrace.parser.JtLexiconTypeq\u0000~\u0000\u0082sq\u0000~\u0000\u0000ppsq\u0000~\u0000(q\u0000~\u0000"
+"+pq\u0000~\u0000,q\u0000~\u00005q\u0000~\u00009sq\u0000~\u00003t\u0000\u0007lexiconq\u0000~\u0000=sq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0011ppsq\u0000~\u0000"
+"\rpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000xq\u0000~\u0000+psq\u0000~\u0000(q\u0000~\u0000+pq\u0000~\u0000}q\u0000~\u0000\u007fq\u0000~\u00009sq\u0000~\u00003t\u0000+"
+"edu.uconn.psy.jtrace.parser.JtPredicateTypeq\u0000~\u0000\u0082sq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000(q\u0000~\u0000+pq\u0000~\u0000,q\u0000~\u00005q\u0000~\u00009sq\u0000~\u00003t\u0000\tpredicateq\u0000~\u0000=sq\u0000~\u0000\rpp\u0000sq\u0000~\u0000"
+"\u0011ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000xq\u0000~\u0000+psq\u0000~\u0000(q\u0000~\u0000+pq\u0000~\u0000}q\u0000~\u0000\u007fq\u0000~\u00009s"
+"q\u0000~\u00003t\u0000\'edu.uconn.psy.jtrace.parser.JtQueryTypeq\u0000~\u0000\u0082sq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000(q\u0000~\u0000+pq\u0000~\u0000,q\u0000~\u00005q\u0000~\u00009sq\u0000~\u00003t\u0000\u0005queryq\u0000~\u0000=sq\u0000~\u0000\rpp\u0000sq\u0000~\u0000"
+"\u0011ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000xq\u0000~\u0000+psq\u0000~\u0000(q\u0000~\u0000+pq\u0000~\u0000}q\u0000~\u0000\u007fq\u0000~\u00009s"
+"q\u0000~\u00003t\u00002edu.uconn.psy.jtrace.parser.JtListOfPrimitivesTypeq\u0000"
+"~\u0000\u0082sq\u0000~\u0000\u0000ppsq\u0000~\u0000(q\u0000~\u0000+pq\u0000~\u0000,q\u0000~\u00005q\u0000~\u00009sq\u0000~\u00003t\u0000\u0004listq\u0000~\u0000=sr\u0000\""
+"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/L"
+"com/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun."
+"msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rs"
+"treamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;"
+"xp\u0000\u0000\u0000&\u0001pq\u0000~\u0000\u0012q\u0000~\u0000\tq\u0000~\u0000zq\u0000~\u0000\u008bq\u0000~\u0000\u0097q\u0000~\u0000\u00a3q\u0000~\u0000\u00afq\u0000~\u0000\u00bbq\u0000~\u0000\nq\u0000~\u0000\u0006q\u0000"
+"~\u0000uq\u0000~\u0000\u0088q\u0000~\u0000\u0094q\u0000~\u0000\u00a0q\u0000~\u0000\u00acq\u0000~\u0000\u00b8q\u0000~\u0000\bq\u0000~\u0000\u0007q\u0000~\u0000mq\u0000~\u0000?q\u0000~\u0000\u000bq\u0000~\u0000\fq\u0000"
+"~\u0000\'q\u0000~\u0000hq\u0000~\u0000pq\u0000~\u0000\u0083q\u0000~\u0000\u008fq\u0000~\u0000\u009bq\u0000~\u0000\u00a7q\u0000~\u0000\u00b3q\u0000~\u0000\u00bfq\u0000~\u0000wq\u0000~\u0000\u008aq\u0000~\u0000\u0096q\u0000"
+"~\u0000\u00a2q\u0000~\u0000\u00aeq\u0000~\u0000\u00baq\u0000~\u0000\u0005x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends edu.uconn.psy.jtrace.parser.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(edu.uconn.psy.jtrace.parser.impl.runtime.UnmarshallingContext context) {
            super(context, "--------------------");
        }

        protected Unmarshaller(edu.uconn.psy.jtrace.parser.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return edu.uconn.psy.jtrace.parser.impl.JtPrimitiveTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  8 :
                        if (("lexicon" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Parameters = ((edu.uconn.psy.jtrace.parser.impl.JtParametersTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtParametersTypeImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("phonology" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Parameters = ((edu.uconn.psy.jtrace.parser.impl.JtParametersTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtParametersTypeImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("StringParam" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Parameters = ((edu.uconn.psy.jtrace.parser.impl.JtParametersTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtParametersTypeImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IntParam" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Parameters = ((edu.uconn.psy.jtrace.parser.impl.JtParametersTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtParametersTypeImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DecimalParam" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Parameters = ((edu.uconn.psy.jtrace.parser.impl.JtParametersTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtParametersTypeImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("StringParamRep" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Parameters = ((edu.uconn.psy.jtrace.parser.impl.JtParametersTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtParametersTypeImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IntParamRep" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Parameters = ((edu.uconn.psy.jtrace.parser.impl.JtParametersTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtParametersTypeImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DecimalParamRep" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Parameters = ((edu.uconn.psy.jtrace.parser.impl.JtParametersTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtParametersTypeImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Parameters = ((edu.uconn.psy.jtrace.parser.impl.JtParametersTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtParametersTypeImpl.class), 9, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  16 :
                        if (("item-with-highest-peak" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Query = ((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("fetch-current-value-of-a-parameter" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Query = ((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("current-input" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Query = ((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("size-of-lexicon" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Query = ((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("nth-item-in-lexicon" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Query = ((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("query-one-simulation-cell" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Query = ((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("value-of-highest-peak" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Query = ((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("item-with-nth-highest-peak" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Query = ((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("value-of-nth-highest-peak" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Query = ((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("peak-value-of-item" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Query = ((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("cycle-when-item-peaks" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Query = ((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("cycle-when-item-exceeds-threshold" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Query = ((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("nth-item-to-exceed-threshold" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Query = ((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("decision-rule-report" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Query = ((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("McClellend-1991-running-average-metric" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Query = ((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtQueryTypeImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  10 :
                        if (("arg" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _List = ((edu.uconn.psy.jtrace.parser.impl.JtListOfPrimitivesTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtListOfPrimitivesTypeImpl.class), 11, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("text" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        if (("int" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 12;
                            return ;
                        }
                        if (("decimal" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        if (("file" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 6;
                            return ;
                        }
                        if (("parameters" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 8;
                            return ;
                        }
                        if (("lexicon" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 18;
                            return ;
                        }
                        if (("predicate" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 14;
                            return ;
                        }
                        if (("query" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        if (("list" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 10;
                            return ;
                        }
                        break;
                    case  18 :
                        if (("lexicon-name" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Lexicon = ((edu.uconn.psy.jtrace.parser.impl.JtLexiconTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtLexiconTypeImpl.class), 19, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("lexeme" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Lexicon = ((edu.uconn.psy.jtrace.parser.impl.JtLexiconTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtLexiconTypeImpl.class), 19, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  6 :
                        if (("absolute-path" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _File = ((edu.uconn.psy.jtrace.parser.impl.JtFileNameTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtFileNameTypeImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("relative-path" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _File = ((edu.uconn.psy.jtrace.parser.impl.JtFileNameTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtFileNameTypeImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("name" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _File = ((edu.uconn.psy.jtrace.parser.impl.JtFileNameTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtFileNameTypeImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _File = ((edu.uconn.psy.jtrace.parser.impl.JtFileNameTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtFileNameTypeImpl.class), 7, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  14 :
                        if (("equals" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Predicate = ((edu.uconn.psy.jtrace.parser.impl.JtPredicateTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtPredicateTypeImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("not-equal" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Predicate = ((edu.uconn.psy.jtrace.parser.impl.JtPredicateTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtPredicateTypeImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("is-greater-than" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Predicate = ((edu.uconn.psy.jtrace.parser.impl.JtPredicateTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtPredicateTypeImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("is-less-than" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Predicate = ((edu.uconn.psy.jtrace.parser.impl.JtPredicateTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtPredicateTypeImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("is-member-of-list" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Predicate = ((edu.uconn.psy.jtrace.parser.impl.JtPredicateTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtPredicateTypeImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("true" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Predicate = ((edu.uconn.psy.jtrace.parser.impl.JtPredicateTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtPredicateTypeImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("false" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Predicate = ((edu.uconn.psy.jtrace.parser.impl.JtPredicateTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtPredicateTypeImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("and" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Predicate = ((edu.uconn.psy.jtrace.parser.impl.JtPredicateTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtPredicateTypeImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("or" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Predicate = ((edu.uconn.psy.jtrace.parser.impl.JtPredicateTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtPredicateTypeImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("not" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Predicate = ((edu.uconn.psy.jtrace.parser.impl.JtPredicateTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtPredicateTypeImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  15 :
                        if (("predicate" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("text" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  8 :
                        _Parameters = ((edu.uconn.psy.jtrace.parser.impl.JtParametersTypeImpl) spawnChildFromLeaveElement((edu.uconn.psy.jtrace.parser.impl.JtParametersTypeImpl.class), 9, ___uri, ___local, ___qname));
                        return ;
                    case  13 :
                        if (("int" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  2 :
                        if (("decimal" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  17 :
                        if (("query" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  7 :
                        if (("file" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  9 :
                        if (("parameters" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("list" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  6 :
                        _File = ((edu.uconn.psy.jtrace.parser.impl.JtFileNameTypeImpl) spawnChildFromLeaveElement((edu.uconn.psy.jtrace.parser.impl.JtFileNameTypeImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  19 :
                        if (("lexicon" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  8 :
                        _Parameters = ((edu.uconn.psy.jtrace.parser.impl.JtParametersTypeImpl) spawnChildFromEnterAttribute((edu.uconn.psy.jtrace.parser.impl.JtParametersTypeImpl.class), 9, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        _File = ((edu.uconn.psy.jtrace.parser.impl.JtFileNameTypeImpl) spawnChildFromEnterAttribute((edu.uconn.psy.jtrace.parser.impl.JtFileNameTypeImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  8 :
                        _Parameters = ((edu.uconn.psy.jtrace.parser.impl.JtParametersTypeImpl) spawnChildFromLeaveAttribute((edu.uconn.psy.jtrace.parser.impl.JtParametersTypeImpl.class), 9, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        _File = ((edu.uconn.psy.jtrace.parser.impl.JtFileNameTypeImpl) spawnChildFromLeaveAttribute((edu.uconn.psy.jtrace.parser.impl.JtFileNameTypeImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  12 :
                            eatText1(value);
                            state = 13;
                            return ;
                        case  8 :
                            _Parameters = ((edu.uconn.psy.jtrace.parser.impl.JtParametersTypeImpl) spawnChildFromText((edu.uconn.psy.jtrace.parser.impl.JtParametersTypeImpl.class), 9, value));
                            return ;
                        case  1 :
                            eatText2(value);
                            state = 2;
                            return ;
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                        case  4 :
                            eatText3(value);
                            state = 5;
                            return ;
                        case  6 :
                            _File = ((edu.uconn.psy.jtrace.parser.impl.JtFileNameTypeImpl) spawnChildFromText((edu.uconn.psy.jtrace.parser.impl.JtFileNameTypeImpl.class), 7, value));
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Int = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Int = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Decimal = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Text = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}

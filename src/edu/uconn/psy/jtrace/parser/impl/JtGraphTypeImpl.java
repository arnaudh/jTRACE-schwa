//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.08.25 at 01:29:02 EDT 
//


package edu.uconn.psy.jtrace.parser.impl;

public class JtGraphTypeImpl implements edu.uconn.psy.jtrace.parser.JtGraphType, com.sun.xml.bind.JAXBObject, edu.uconn.psy.jtrace.parser.impl.runtime.UnmarshallableObject, edu.uconn.psy.jtrace.parser.impl.runtime.XMLSerializable, edu.uconn.psy.jtrace.parser.impl.runtime.ValidatableObject
{

    protected boolean has_Spread;
    protected int _Spread;
    protected edu.uconn.psy.jtrace.parser.JtGraphType.DataType _Data;
    protected java.lang.String _ModelInput;
    protected edu.uconn.psy.jtrace.parser.JtGraphType.LabelsType _Labels;
    protected java.lang.String _Report;
    protected boolean has_ToRight;
    protected int _ToRight;
    protected boolean has_FromLeft;
    protected int _FromLeft;
    protected java.lang.String _Title;
    public final static java.lang.Class version = (edu.uconn.psy.jtrace.parser.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (edu.uconn.psy.jtrace.parser.JtGraphType.class);
    }

    public int getSpread() {
        return _Spread;
    }

    public void setSpread(int value) {
        _Spread = value;
        has_Spread = true;
    }

    public edu.uconn.psy.jtrace.parser.JtGraphType.DataType getData() {
        return _Data;
    }

    public void setData(edu.uconn.psy.jtrace.parser.JtGraphType.DataType value) {
        _Data = value;
    }

    public java.lang.String getModelInput() {
        return _ModelInput;
    }

    public void setModelInput(java.lang.String value) {
        _ModelInput = value;
    }

    public edu.uconn.psy.jtrace.parser.JtGraphType.LabelsType getLabels() {
        return _Labels;
    }

    public void setLabels(edu.uconn.psy.jtrace.parser.JtGraphType.LabelsType value) {
        _Labels = value;
    }

    public java.lang.String getReport() {
        return _Report;
    }

    public void setReport(java.lang.String value) {
        _Report = value;
    }

    public int getToRight() {
        return _ToRight;
    }

    public void setToRight(int value) {
        _ToRight = value;
        has_ToRight = true;
    }

    public int getFromLeft() {
        return _FromLeft;
    }

    public void setFromLeft(int value) {
        _FromLeft = value;
        has_FromLeft = true;
    }

    public java.lang.String getTitle() {
        return _Title;
    }

    public void setTitle(java.lang.String value) {
        _Title = value;
    }

    public edu.uconn.psy.jtrace.parser.impl.runtime.UnmarshallingEventHandler createUnmarshaller(edu.uconn.psy.jtrace.parser.impl.runtime.UnmarshallingContext context) {
        return new edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(edu.uconn.psy.jtrace.parser.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_Title!= null) {
            context.startElement("http://xml.netbeans.org/examples/targetNS", "title");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Title), "Title");
            } catch (java.lang.Exception e) {
                edu.uconn.psy.jtrace.parser.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Report!= null) {
            context.startElement("http://xml.netbeans.org/examples/targetNS", "report");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Report), "Report");
            } catch (java.lang.Exception e) {
                edu.uconn.psy.jtrace.parser.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ModelInput!= null) {
            context.startElement("http://xml.netbeans.org/examples/targetNS", "modelInput");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _ModelInput), "ModelInput");
            } catch (java.lang.Exception e) {
                edu.uconn.psy.jtrace.parser.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_Spread) {
            context.startElement("http://xml.netbeans.org/examples/targetNS", "spread");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _Spread)), "Spread");
            } catch (java.lang.Exception e) {
                edu.uconn.psy.jtrace.parser.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_FromLeft) {
            context.startElement("http://xml.netbeans.org/examples/targetNS", "fromLeft");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _FromLeft)), "FromLeft");
            } catch (java.lang.Exception e) {
                edu.uconn.psy.jtrace.parser.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ToRight) {
            context.startElement("http://xml.netbeans.org/examples/targetNS", "toRight");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _ToRight)), "ToRight");
            } catch (java.lang.Exception e) {
                edu.uconn.psy.jtrace.parser.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        context.startElement("http://xml.netbeans.org/examples/targetNS", "labels");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Labels), "Labels");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Labels), "Labels");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Labels), "Labels");
        context.endElement();
        context.startElement("http://xml.netbeans.org/examples/targetNS", "data");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Data), "Data");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Data), "Data");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Data), "Data");
        context.endElement();
    }

    public void serializeAttributes(edu.uconn.psy.jtrace.parser.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(edu.uconn.psy.jtrace.parser.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (edu.uconn.psy.jtrace.parser.JtGraphType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001pp"
+"sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnam"
+"eClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gram"
+"mar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcon"
+"tentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005value"
+"xp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dt"
+"t\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLc"
+"om/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000#com.sun.msv.datatype."
+"xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.dat"
+"atype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.dataty"
+"pe.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.X"
+"SDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;"
+"L\u0000\btypeNameq\u0000~\u0000\u001dL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/Wh"
+"iteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006st"
+"ringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserv"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetExpr"
+"ession\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ej"
+"B\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001dL\u0000\fnamespaceURIq\u0000~\u0000\u001dxpq\u0000~\u0000!q\u0000~\u0000 sq\u0000~"
+"\u0000\fppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~"
+"\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000fxq\u0000~\u0000\u0003q\u0000~\u0000\u0013psq\u0000~\u0000\u0015ppsr\u0000\"com.sun.msv.datat"
+"ype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0005QNamesr\u00005com.sun.m"
+"sv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"#q\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000/q\u0000~\u0000 sr\u0000#com.sun.msv.grammar.SimpleNameClas"
+"s\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001dL\u0000\fnamespaceURIq\u0000~\u0000\u001dxr\u0000\u001dcom.sun"
+".msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.o"
+"rg/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expression"
+"$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0012\u0001psq\u0000~\u00003t\u0000\u0005titlet\u0000)"
+"http://xml.netbeans.org/examples/targetNSq\u0000~\u00009sq\u0000~\u0000\fppsq\u0000~\u0000\u000e"
+"q\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0018sq\u0000~\u0000\fppsq\u0000~\u0000*q\u0000~\u0000\u0013pq\u0000~\u0000,q\u0000~\u00005q\u0000~\u00009sq\u0000~\u0000"
+"3t\u0000\u0006reportq\u0000~\u0000=q\u0000~\u00009sq\u0000~\u0000\fppsq\u0000~\u0000\u000eq\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0018sq\u0000~\u0000\f"
+"ppsq\u0000~\u0000*q\u0000~\u0000\u0013pq\u0000~\u0000,q\u0000~\u00005q\u0000~\u00009sq\u0000~\u00003t\u0000\nmodelInputq\u0000~\u0000=q\u0000~\u00009sq"
+"\u0000~\u0000\fppsq\u0000~\u0000\u000eq\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0015ppsr\u0000 com.sun.msv.datatype."
+"xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDe"
+"rivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xs"
+"d/XSDatatypeImpl;xq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0003intq\u0000~\u00001sr\u0000*com.sun.msv.datat"
+"ype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype"
+".xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;"
+"xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFace"
+"t\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000"
+"RL\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000"
+"\tfacetNameq\u0000~\u0000\u001dxq\u0000~\u0000\u001cppq\u0000~\u00001\u0000\u0001sr\u0000*com.sun.msv.datatype.xsd.M"
+"inInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Vppq\u0000~\u00001\u0000\u0000sr\u0000!com.sun.msv.da"
+"tatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Qq\u0000~\u0000 t\u0000\u0004longq\u0000~\u00001sq\u0000~\u0000Up"
+"pq\u0000~\u00001\u0000\u0001sq\u0000~\u0000\\ppq\u0000~\u00001\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.IntegerT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Qq\u0000~\u0000 t\u0000\u0007integerq\u0000~\u00001sr\u0000,com.sun.msv.data"
+"type.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.m"
+"sv.datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000"
+"\u0000xq\u0000~\u0000Yppq\u0000~\u00001\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0007decimalq\u0000~\u00001q\u0000~\u0000jt\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000"
+"~\u0000dt\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010j"
+"ava.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000dt\u0000\fmaxInclusivesq\u0000~"
+"\u0000n\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000_q\u0000~\u0000msr\u0000\u0011java.lang.Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005value"
+"xq\u0000~\u0000o\u0080\u0000\u0000\u0000q\u0000~\u0000_q\u0000~\u0000qsq\u0000~\u0000s\u007f\u00ff\u00ff\u00ffq\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000Tq\u0000~\u0000 sq\u0000~\u0000\fpps"
+"q\u0000~\u0000*q\u0000~\u0000\u0013pq\u0000~\u0000,q\u0000~\u00005q\u0000~\u00009sq\u0000~\u00003t\u0000\u0006spreadq\u0000~\u0000=q\u0000~\u00009sq\u0000~\u0000\fpps"
+"q\u0000~\u0000\u000eq\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000\fppsq\u0000~\u0000*q\u0000~\u0000\u0013pq\u0000~\u0000,q\u0000~\u00005q\u0000~\u00009"
+"sq\u0000~\u00003t\u0000\bfromLeftq\u0000~\u0000=q\u0000~\u00009sq\u0000~\u0000\fppsq\u0000~\u0000\u000eq\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000"
+"Osq\u0000~\u0000\fppsq\u0000~\u0000*q\u0000~\u0000\u0013pq\u0000~\u0000,q\u0000~\u00005q\u0000~\u00009sq\u0000~\u00003t\u0000\u0007toRightq\u0000~\u0000=q\u0000~"
+"\u00009sq\u0000~\u0000\u000epp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000epp\u0000sq\u0000~\u0000\fppsr\u0000 com.sun.msv.grammar."
+"OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0013psq\u0000~\u0000*q\u0000~\u0000\u0013psr\u00002com.sun.msv.gra"
+"mmar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000:psr"
+"\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00004q\u0000~\u00009sq\u0000~"
+"\u00003t\u00002edu.uconn.psy.jtrace.parser.JtGraphType.LabelsTypet\u0000+ht"
+"tp://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\fppsq\u0000~\u0000*q\u0000~\u0000\u0013"
+"pq\u0000~\u0000,q\u0000~\u00005q\u0000~\u00009sq\u0000~\u00003t\u0000\u0006labelsq\u0000~\u0000=sq\u0000~\u0000\u000epp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000ep"
+"p\u0000sq\u0000~\u0000\fppsq\u0000~\u0000\u008dq\u0000~\u0000\u0013psq\u0000~\u0000*q\u0000~\u0000\u0013pq\u0000~\u0000\u0092q\u0000~\u0000\u0094q\u0000~\u00009sq\u0000~\u00003t\u00000ed"
+"u.uconn.psy.jtrace.parser.JtGraphType.DataTypeq\u0000~\u0000\u0097sq\u0000~\u0000\fpps"
+"q\u0000~\u0000*q\u0000~\u0000\u0013pq\u0000~\u0000,q\u0000~\u00005q\u0000~\u00009sq\u0000~\u00003t\u0000\u0004dataq\u0000~\u0000=sr\u0000\"com.sun.msv."
+"grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/"
+"grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar."
+"ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersion"
+"L\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000!\u0001pq\u0000~\u0000"
+"\u0014q\u0000~\u0000@q\u0000~\u0000Gq\u0000~\u0000\nq\u0000~\u0000\u008fq\u0000~\u0000\u00a0q\u0000~\u0000\rq\u0000~\u0000>q\u0000~\u0000Eq\u0000~\u0000Lq\u0000~\u0000{q\u0000~\u0000\u0082q\u0000~\u0000"
+"\u0007q\u0000~\u0000\u008aq\u0000~\u0000\u009dq\u0000~\u0000\bq\u0000~\u0000\u0006q\u0000~\u0000\u0005q\u0000~\u0000\tq\u0000~\u0000Nq\u0000~\u0000}q\u0000~\u0000\u0084q\u0000~\u0000)q\u0000~\u0000Aq\u0000~\u0000"
+"\u000bq\u0000~\u0000Hq\u0000~\u0000wq\u0000~\u0000~q\u0000~\u0000\u0085q\u0000~\u0000\u0098q\u0000~\u0000\u00a4q\u0000~\u0000\u008cq\u0000~\u0000\u009fx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class DataTypeImpl implements edu.uconn.psy.jtrace.parser.JtGraphType.DataType, com.sun.xml.bind.JAXBObject, edu.uconn.psy.jtrace.parser.impl.runtime.UnmarshallableObject, edu.uconn.psy.jtrace.parser.impl.runtime.XMLSerializable, edu.uconn.psy.jtrace.parser.impl.runtime.ValidatableObject
    {

        protected com.sun.xml.bind.util.ListImpl _Row;
        public final static java.lang.Class version = (edu.uconn.psy.jtrace.parser.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (edu.uconn.psy.jtrace.parser.JtGraphType.DataType.class);
        }

        protected com.sun.xml.bind.util.ListImpl _getRow() {
            if (_Row == null) {
                _Row = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _Row;
        }

        public java.util.List getRow() {
            return _getRow();
        }

        public edu.uconn.psy.jtrace.parser.impl.runtime.UnmarshallingEventHandler createUnmarshaller(edu.uconn.psy.jtrace.parser.impl.runtime.UnmarshallingContext context) {
            return new edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(edu.uconn.psy.jtrace.parser.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Row == null)? 0 :_Row.size());
            while (idx1 != len1) {
                context.startElement("http://xml.netbeans.org/examples/targetNS", "row");
                int idx_0 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Row.get(idx_0 ++)), "Row");
                context.endNamespaceDecls();
                int idx_1 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Row.get(idx_1 ++)), "Row");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Row.get(idx1 ++)), "Row");
                context.endElement();
            }
        }

        public void serializeAttributes(edu.uconn.psy.jtrace.parser.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Row == null)? 0 :_Row.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public void serializeURIs(edu.uconn.psy.jtrace.parser.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Row == null)? 0 :_Row.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (edu.uconn.psy.jtrace.parser.JtGraphType.DataType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bex"
+"pandedExpq\u0000~\u0000\u0002xpppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002x"
+"q\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\np\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\npsr\u0000 com.sun.msv.gramm"
+"ar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003"
+"q\u0000~\u0000\npsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\t\u0001psr\u0000 com.sun.msv.grammar.AnyNameClas"
+"s\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr"
+"\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0018psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001fxq\u0000~"
+"\u0000\u001at\u00008edu.uconn.psy.jtrace.parser.JtGraphType.DataType.RowTyp"
+"et\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0000ppsq\u0000~\u0000"
+"\u0014q\u0000~\u0000\npsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLor"
+"g/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun"
+"/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.Qn"
+"ameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomic"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/su"
+"n/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.or"
+"g/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSp"
+"aceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd"
+".WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Exp"
+"ression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv."
+"util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000"
+"~\u0000\u001fxpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001et\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSch"
+"ema-instanceq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u0003rowt\u0000)http://xml.netbeans.org/exam"
+"ples/targetNSq\u0000~\u0000\u001dsr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$Clo"
+"sedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7"
+"j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/g"
+"rammar/ExpressionPool;xp\u0000\u0000\u0000\u0006\u0001pq\u0000~\u0000\u0013q\u0000~\u0000\u0010q\u0000~\u0000\bq\u0000~\u0000#q\u0000~\u0000\u0012q\u0000~\u0000\u0005"
+"x"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class RowTypeImpl implements edu.uconn.psy.jtrace.parser.JtGraphType.DataType.RowType, com.sun.xml.bind.JAXBObject, edu.uconn.psy.jtrace.parser.impl.runtime.UnmarshallableObject, edu.uconn.psy.jtrace.parser.impl.runtime.XMLSerializable, edu.uconn.psy.jtrace.parser.impl.runtime.ValidatableObject
        {

            protected com.sun.xml.bind.util.ListImpl _D;
            protected java.lang.String _Label;
            public final static java.lang.Class version = (edu.uconn.psy.jtrace.parser.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (edu.uconn.psy.jtrace.parser.JtGraphType.DataType.RowType.class);
            }

            protected com.sun.xml.bind.util.ListImpl _getD() {
                if (_D == null) {
                    _D = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                }
                return _D;
            }

            public java.util.List getD() {
                return _getD();
            }

            public java.lang.String getLabel() {
                return _Label;
            }

            public void setLabel(java.lang.String value) {
                _Label = value;
            }

            public edu.uconn.psy.jtrace.parser.impl.runtime.UnmarshallingEventHandler createUnmarshaller(edu.uconn.psy.jtrace.parser.impl.runtime.UnmarshallingContext context) {
                return new edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl.RowTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(edu.uconn.psy.jtrace.parser.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx1 = 0;
                final int len1 = ((_D == null)? 0 :_D.size());
                if (_Label!= null) {
                    context.startElement("http://xml.netbeans.org/examples/targetNS", "label");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Label), "Label");
                    } catch (java.lang.Exception e) {
                        edu.uconn.psy.jtrace.parser.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                while (idx1 != len1) {
                    context.startElement("http://xml.netbeans.org/examples/targetNS", "d");
                    int idx_2 = idx1;
                    try {
                        idx_2 += 1;
                    } catch (java.lang.Exception e) {
                        edu.uconn.psy.jtrace.parser.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endNamespaceDecls();
                    int idx_3 = idx1;
                    try {
                        idx_3 += 1;
                    } catch (java.lang.Exception e) {
                        edu.uconn.psy.jtrace.parser.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _D.get(idx1 ++))), "D");
                    } catch (java.lang.Exception e) {
                        edu.uconn.psy.jtrace.parser.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
            }

            public void serializeAttributes(edu.uconn.psy.jtrace.parser.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx1 = 0;
                final int len1 = ((_D == null)? 0 :_D.size());
                while (idx1 != len1) {
                    try {
                        idx1 += 1;
                    } catch (java.lang.Exception e) {
                        edu.uconn.psy.jtrace.parser.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                }
            }

            public void serializeURIs(edu.uconn.psy.jtrace.parser.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx1 = 0;
                final int len1 = ((_D == null)? 0 :_D.size());
                while (idx1 != len1) {
                    try {
                        idx1 += 1;
                    } catch (java.lang.Exception e) {
                        edu.uconn.psy.jtrace.parser.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                }
            }

            public java.lang.Class getPrimaryInterface() {
                return (edu.uconn.psy.jtrace.parser.JtGraphType.DataType.RowType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom."
+"sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttr"
+"ibutesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa"
+"\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002"
+"L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000#com.sun.m"
+"sv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com"
+".sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.su"
+"n.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.da"
+"tatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/"
+"lang/String;L\u0000\btypeNameq\u0000~\u0000\u0017L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/dat"
+"atype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XM"
+"LSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProce"
+"ssor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSp"
+"aceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression"
+"$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.St"
+"ringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000\u0017xpq\u0000"
+"~\u0000\u001bq\u0000~\u0000\u001asq\u0000~\u0000\u0006ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\txq\u0000~\u0000\u0003q\u0000~\u0000\rpsq\u0000~\u0000\u000fppsr\u0000\"com.s"
+"un.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0005QNames"
+"r\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001dq\u0000~\u0000 sq\u0000~\u0000!q\u0000~\u0000)q\u0000~\u0000\u001asr\u0000#com.sun.msv.grammar.Si"
+"mpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000"
+"\u0017xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)htt"
+"p://www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.gramma"
+"r.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\f\u0001psq\u0000~\u0000"
+"-t\u0000\u0005labelt\u0000)http://xml.netbeans.org/examples/targetNSq\u0000~\u00003sq"
+"\u0000~\u0000\u0006ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom"
+".sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\rps"
+"q\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fq\u0000~\u0000\rpsr\u0000#com.sun.msv.datatype.xsd"
+".NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0007decimalq\u0000~\u0000+q\u0000~\u0000 sq\u0000~\u0000!q"
+"\u0000~\u0000Aq\u0000~\u0000\u001asq\u0000~\u0000\u0006ppsq\u0000~\u0000$q\u0000~\u0000\rpq\u0000~\u0000&q\u0000~\u0000/q\u0000~\u00003sq\u0000~\u0000-t\u0000\u0001dq\u0000~\u00007q"
+"\u0000~\u00003sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpT"
+"ablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-"
+"com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005c"
+"ountB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Express"
+"ionPool;xp\u0000\u0000\u0000\b\u0001pq\u0000~\u0000\u000eq\u0000~\u0000\u0007q\u0000~\u00008q\u0000~\u0000;q\u0000~\u0000=q\u0000~\u0000#q\u0000~\u0000Cq\u0000~\u0000\u0005x"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends edu.uconn.psy.jtrace.parser.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(edu.uconn.psy.jtrace.parser.impl.runtime.UnmarshallingContext context) {
                    super(context, "-------");
                }

                protected Unmarshaller(edu.uconn.psy.jtrace.parser.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl.RowTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                if (("label" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 1;
                                    return ;
                                }
                                state = 3;
                                continue outer;
                            case  6 :
                                if (("d" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 4;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  3 :
                                if (("d" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 4;
                                    return ;
                                }
                                state = 6;
                                continue outer;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                state = 3;
                                continue outer;
                            case  2 :
                                if (("label" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  6 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  5 :
                                if (("d" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                                    context.popAttributes();
                                    state = 6;
                                    return ;
                                }
                                break;
                            case  3 :
                                state = 6;
                                continue outer;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                state = 3;
                                continue outer;
                            case  6 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                            case  3 :
                                state = 6;
                                continue outer;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                state = 3;
                                continue outer;
                            case  6 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  3 :
                                state = 6;
                                continue outer;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  1 :
                                    eatText1(value);
                                    state = 2;
                                    return ;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  4 :
                                    eatText2(value);
                                    state = 5;
                                    return ;
                                case  6 :
                                    revertToParentFromText(value);
                                    return ;
                                case  3 :
                                    state = 6;
                                    continue outer;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Label = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText2(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _getD().add(javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

            }

        }

        public class Unmarshaller
            extends edu.uconn.psy.jtrace.parser.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(edu.uconn.psy.jtrace.parser.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(edu.uconn.psy.jtrace.parser.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            if (("row" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  1 :
                            if (("label" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                                _getRow().add(((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl.RowTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl.RowTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("d" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                                _getRow().add(((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl.RowTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl.RowTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            _getRow().add(((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl.RowTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl.RowTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        case  0 :
                            if (("row" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            state = 3;
                            continue outer;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  1 :
                            _getRow().add(((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl.RowTypeImpl) spawnChildFromLeaveElement((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl.RowTypeImpl.class), 2, ___uri, ___local, ___qname)));
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  2 :
                            if (("row" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  1 :
                            _getRow().add(((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl.RowTypeImpl) spawnChildFromEnterAttribute((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl.RowTypeImpl.class), 2, ___uri, ___local, ___qname)));
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  1 :
                            _getRow().add(((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl.RowTypeImpl) spawnChildFromLeaveAttribute((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl.RowTypeImpl.class), 2, ___uri, ___local, ___qname)));
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                            case  1 :
                                _getRow().add(((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl.RowTypeImpl) spawnChildFromText((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl.RowTypeImpl.class), 2, value)));
                                return ;
                            case  0 :
                                state = 3;
                                continue outer;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public static class LabelsTypeImpl implements edu.uconn.psy.jtrace.parser.JtGraphType.LabelsType, com.sun.xml.bind.JAXBObject, edu.uconn.psy.jtrace.parser.impl.runtime.UnmarshallableObject, edu.uconn.psy.jtrace.parser.impl.runtime.XMLSerializable, edu.uconn.psy.jtrace.parser.impl.runtime.ValidatableObject
    {

        protected com.sun.xml.bind.util.ListImpl _Label;
        public final static java.lang.Class version = (edu.uconn.psy.jtrace.parser.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (edu.uconn.psy.jtrace.parser.JtGraphType.LabelsType.class);
        }

        protected com.sun.xml.bind.util.ListImpl _getLabel() {
            if (_Label == null) {
                _Label = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _Label;
        }

        public java.util.List getLabel() {
            return _getLabel();
        }

        public edu.uconn.psy.jtrace.parser.impl.runtime.UnmarshallingEventHandler createUnmarshaller(edu.uconn.psy.jtrace.parser.impl.runtime.UnmarshallingContext context) {
            return new edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.LabelsTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(edu.uconn.psy.jtrace.parser.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Label == null)? 0 :_Label.size());
            while (idx1 != len1) {
                context.startElement("http://xml.netbeans.org/examples/targetNS", "label");
                int idx_0 = idx1;
                try {
                    idx_0 += 1;
                } catch (java.lang.Exception e) {
                    edu.uconn.psy.jtrace.parser.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endNamespaceDecls();
                int idx_1 = idx1;
                try {
                    idx_1 += 1;
                } catch (java.lang.Exception e) {
                    edu.uconn.psy.jtrace.parser.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _Label.get(idx1 ++)), "Label");
                } catch (java.lang.Exception e) {
                    edu.uconn.psy.jtrace.parser.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
        }

        public void serializeAttributes(edu.uconn.psy.jtrace.parser.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Label == null)? 0 :_Label.size());
            while (idx1 != len1) {
                try {
                    idx1 += 1;
                } catch (java.lang.Exception e) {
                    edu.uconn.psy.jtrace.parser.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            }
        }

        public void serializeURIs(edu.uconn.psy.jtrace.parser.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Label == null)? 0 :_Label.size());
            while (idx1 != len1) {
                try {
                    idx1 += 1;
                } catch (java.lang.Exception e) {
                    edu.uconn.psy.jtrace.parser.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (edu.uconn.psy.jtrace.parser.JtGraphType.LabelsType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bex"
+"pandedExpq\u0000~\u0000\u0002xpppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002x"
+"q\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\np\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001f"
+"Lorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/"
+"sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000#com.sun.msv.datatype.xsd"
+".StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.dataty"
+"pe.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype."
+"xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDa"
+"tatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\b"
+"typeNameq\u0000~\u0000\u0019L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/White"
+"SpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006strin"
+"gsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetExpress"
+"ion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d"
+"\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~\u0000\u0019xpq\u0000~\u0000\u001dq\u0000~\u0000\u001csq\u0000~\u0000\u0000p"
+"psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L"
+"\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003q\u0000~\u0000\npsq\u0000~\u0000\u0011ppsr\u0000\"com.sun.msv.datatype"
+".xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0016q\u0000~\u0000\u001ct\u0000\u0005QNamesr\u00005com.sun.msv."
+"datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001fq\u0000"
+"~\u0000\"sq\u0000~\u0000#q\u0000~\u0000+q\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~\u0000\u0019xr\u0000\u001dcom.sun.ms"
+"v.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/"
+"2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expression$Ep"
+"silonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\t\u0001psq\u0000~\u0000/t\u0000\u0005labelt\u0000)htt"
+"p://xml.netbeans.org/examples/targetNSq\u0000~\u00005sr\u0000\"com.sun.msv.g"
+"rammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/g"
+"rammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.E"
+"xpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL"
+"\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0004\u0001pq\u0000~\u0000\u0010"
+"q\u0000~\u0000\u0005q\u0000~\u0000\bq\u0000~\u0000%x"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends edu.uconn.psy.jtrace.parser.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(edu.uconn.psy.jtrace.parser.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(edu.uconn.psy.jtrace.parser.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.LabelsTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            if (("label" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 1;
                                return ;
                            }
                            state = 3;
                            continue outer;
                        case  3 :
                            if (("label" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 1;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  2 :
                            if (("label" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            state = 3;
                            continue outer;
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            state = 3;
                            continue outer;
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  1 :
                                eatText1(value);
                                state = 2;
                                return ;
                            case  0 :
                                state = 3;
                                continue outer;
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _getLabel().add(value);
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

        }

    }

    public class Unmarshaller
        extends edu.uconn.psy.jtrace.parser.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(edu.uconn.psy.jtrace.parser.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------------");
        }

        protected Unmarshaller(edu.uconn.psy.jtrace.parser.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  24 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  19 :
                        if (("label" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Labels = ((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.LabelsTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.LabelsTypeImpl.class), 20, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Labels = ((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.LabelsTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.LabelsTypeImpl.class), 20, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  22 :
                        if (("row" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            _Data = ((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Data = ((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl) spawnChildFromEnterElement((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl.class), 23, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  12 :
                        if (("fromLeft" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  6 :
                        if (("modelInput" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  9 :
                        if (("spread" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  3 :
                        if (("report" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  0 :
                        if (("title" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  18 :
                        if (("labels" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 19;
                            return ;
                        }
                        break;
                    case  21 :
                        if (("data" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 22;
                            return ;
                        }
                        break;
                    case  15 :
                        if (("toRight" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  24 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("title" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  19 :
                        _Labels = ((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.LabelsTypeImpl) spawnChildFromLeaveElement((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.LabelsTypeImpl.class), 20, ___uri, ___local, ___qname));
                        return ;
                    case  22 :
                        _Data = ((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl) spawnChildFromLeaveElement((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl.class), 23, ___uri, ___local, ___qname));
                        return ;
                    case  23 :
                        if (("data" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  17 :
                        if (("toRight" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  8 :
                        if (("modelInput" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  11 :
                        if (("spread" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("report" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  20 :
                        if (("labels" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  14 :
                        if (("fromLeft" == ___local)&&("http://xml.netbeans.org/examples/targetNS" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  24 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  19 :
                        _Labels = ((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.LabelsTypeImpl) spawnChildFromEnterAttribute((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.LabelsTypeImpl.class), 20, ___uri, ___local, ___qname));
                        return ;
                    case  22 :
                        _Data = ((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl) spawnChildFromEnterAttribute((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl.class), 23, ___uri, ___local, ___qname));
                        return ;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  24 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  19 :
                        _Labels = ((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.LabelsTypeImpl) spawnChildFromLeaveAttribute((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.LabelsTypeImpl.class), 20, ___uri, ___local, ___qname));
                        return ;
                    case  22 :
                        _Data = ((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl) spawnChildFromLeaveAttribute((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl.class), 23, ___uri, ___local, ___qname));
                        return ;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  24 :
                            revertToParentFromText(value);
                            return ;
                        case  19 :
                            _Labels = ((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.LabelsTypeImpl) spawnChildFromText((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.LabelsTypeImpl.class), 20, value));
                            return ;
                        case  22 :
                            _Data = ((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl) spawnChildFromText((edu.uconn.psy.jtrace.parser.impl.JtGraphTypeImpl.DataTypeImpl.class), 23, value));
                            return ;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  13 :
                            eatText1(value);
                            state = 14;
                            return ;
                        case  10 :
                            eatText2(value);
                            state = 11;
                            return ;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  1 :
                            eatText3(value);
                            state = 2;
                            return ;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  4 :
                            eatText4(value);
                            state = 5;
                            return ;
                        case  7 :
                            eatText5(value);
                            state = 8;
                            return ;
                        case  16 :
                            eatText6(value);
                            state = 17;
                            return ;
                        case  15 :
                            state = 18;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _FromLeft = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_FromLeft = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Spread = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Spread = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Title = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Report = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ModelInput = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ToRight = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ToRight = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
